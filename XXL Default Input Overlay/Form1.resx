<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAABPxJREFUeF7t
        3WtRXEsYBVAkIAEJSEACEiIhEnCABCQgAQmREAlXAnd/TKd4wzzODKe716rqH3kAP3rvnUDBnDMAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgB09Pj5e5vzJeci5bb8NzKAV/6Uag8v2x8DINp3/0FX7K8CIUvKLTdc/ZQRgVCl4ff7/HSMA
        I0q5txmAct3eBBhFir3tAJRf7c2AEaTUuwxAMQIwihR61wEoRgBGkDLvMwDld3sXQK9S5H0HoBgB6FlK
        fMgAlJv2roDepMCHDkAxAtCjlHeJAShGAHqT4i41AMVPEkJPUtolB6Dct3cNrF0Ku/QAlIf27oE1S1mP
        MQDFCMDapajHGoBiBGDNUtJjDkAxArBWKeixB6AYAVijlPMUA1D+tA8JrEWKeaoBKEYA1iSlPOUAlHrF
        4fP24YGflDKeegCKEYA1SBF/YgCKEeB4Klw5dzn/5bBOf3OMAMtLsO6fIsba1UB7ChHLSaDqX3/6YQRY
        TsJ0/RQremIEWEaC9OspUvTGCHC4hMgA9MsIcJgEyAD0zQiwv4THAIzBQ0nZXYJjAMZhBNhNQmMAxmIE
        2F4CYwDGYwTYTsJiAMbkoaR8r4KyyQsDMgJ8rUKyyQqDMgJ8rgKyyQkDMwJ8rMKxyQiD83hy3kswDMA8
        jACvJRQGYC5GgGcJhAGYj8eTs5EwGIA5GQEMwOSMwOwSAgMwt9sWBWaUABgA7locmE0u3wBQPJR0Rrl4
        A8A/RmA2uXQDwEtGYCa5cAPAW0ZgFrlsA8BHfMfgDHLRBoDPXLSYMKpcsgHgM36MeHR1yZu7hneuW0wY
        VS7ZAPCReuCITwFGl0s2AHzEFwFnkIs2ALx1m3PeIsLIctEGgJfucpR/FrlsA8A/yj+bXLgBoCj/jHLp
        BoCHHOWfUS7eAMztT47yzyqXbwDmpfyzSwAMwJyUHwMwKeVnI0EwAHNRfp4lDAZgHsrPawmEAZhDld8P
        9/BaQmEAxvc3R/l5L8EwAGNTfj6XcBiAcSk/X0tADMCY6gU9Lts1w8cSEgMwHuVnOwmKARhLlf+qXS98
        LWExAOOo8nshT7aXwBiAMSg/u0toDED/lJ/9JDgGoG/Kz/4SHgPQL+XnMAmQAeiT8nO4CtFTnOhJld9z
        +zhcgnT1FCl6ofwsK4Gq7xmnD8rPshIqnwb0Qfk5joTrogLmbHXqxTVOzcM6YQ1SxvtNJ0/mpn1o4Kel
        kKccAOWHNUkpTzUAt+1DAmuRYp5iAJQf1ijlPPYAKD+sVQp6zAFQflizlPRYA6D8sHYp6jEG4DbHU3tg
        7VLUpQfgLkf5oQcp65IDoPzQkxR2qQFQfuhNSrvEADzkKD/0JsU9dACUH3qV8h4yAJ7RDz1LgfcdAOWH
        3qXE+wyA8sMIUuRdB0D5YRQp8y4DoPwwkhR62wGo8l+0NwNGkFJvMwDKDyNKsb8bgHqZdeWHEaXcXw2A
        8sPIUvDPBqCe2nPZ/howopS8fnb/LeWHGaToN0+Vf1bf2++//TCDlP08pz4NqK/0/65ftz8CAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZzdvY/9ZS3nGquAqoAAAAASUVORK5CYII=
</value>
  </data>
</root>